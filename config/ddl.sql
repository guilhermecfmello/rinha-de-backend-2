-- MariaDB Script generated by MySQL Workbench
-- Fri Mar 1 22:51:39 2024
-- Model: New Model Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema rinha
-- -----------------------------------------------------
CREATE DATABASE IF NOT EXISTS `rinha` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
USE `rinha`;

-- -----------------------------------------------------
-- Table `rinha`.`clientes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rinha`.`clientes`;

CREATE TABLE IF NOT EXISTS `rinha`.`clientes` (
  `id` TINYINT(1) UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45),
  `limite` INT NOT NULL,
  `saldo` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`)
) ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `rinha`.`transacoes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rinha`.`transacoes`;

CREATE TABLE IF NOT EXISTS `rinha`.`transacoes` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `valor` INT NULL,
  `tipo` CHAR(1) NULL,
  `descricao` VARCHAR(10) NULL,
  `realizada_em` DATETIME NULL,
  `id_cliente` TINYINT(1) UNSIGNED NULL,
  PRIMARY KEY (`id`),
  INDEX `client_fk_idx` (`id_cliente` ASC) VISIBLE,
  CONSTRAINT `client_fk`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `rinha`.`clientes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
) ENGINE = InnoDB;

DROP PROCEDURE IF EXISTS debitar_valor_no_cliente;
DELIMITER //
CREATE PROCEDURE debitar_valor_no_cliente(
    IN id_cliente_arg INT,
    IN valor_transacao_arg INT,
    IN descricao_transacao_arg VARCHAR(10),
    IN realizada_em_arg DATETIME,
    OUT saldo_atualizado_return NUMERIC,
    OUT limite_return NUMERIC
)
BEGIN
	  DECLARE quantidade_clientes INT;
    DECLARE limite_val INT;
    DECLARE saldo_val INT;
    DECLARE limite_mais_saldo_val INT;
    DECLARE novo_saldo_val INT;
   
     -- Fetch client record
    SELECT limite, saldo INTO limite_val, saldo_val FROM clientes WHERE id = id_cliente_arg FOR UPDATE;
    
    SET limite_mais_saldo_val = limite_val + saldo_val;
    IF valor_transacao_arg > limite_mais_saldo_val THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'VALOR_DEBITO_EXCEDE_LIMITE_CLIENTE';
		ELSE
			SET novo_saldo_val = saldo_val - valor_transacao_arg;
    END IF;
    
    UPDATE clientes SET saldo = novo_saldo_val WHERE id = id_cliente_arg;
		
	INSERT INTO transacoes (`valor`, `tipo`, `descricao`, `realizada_em`, `id_cliente`) 
		VALUES (valor_transacao_arg, 'd', descricao_transacao_arg, realizada_em_arg, id_cliente_arg);
        
	SET saldo_atualizado_return = novo_saldo_val;
  SET limite_return = limite_val;
END //
DELIMITER ;


DROP PROCEDURE IF EXISTS creditar_valor_no_cliente;

DELIMITER //
CREATE PROCEDURE creditar_valor_no_cliente(
  IN id_cliente_arg INT,
  IN valor_transacao_arg INT,
  IN descricao_transacao_arg VARCHAR(10),
  IN realizada_em_arg DATETIME,
  OUT saldo_atualizado_return NUMERIC,
  OUT limite_return NUMERIC
) BEGIN
    DECLARE quantidade_clientes INT;
    DECLARE limite_val INT;
    DECLARE saldo_val INT;
    DECLARE limite_mais_saldo_val INT;
    DECLARE novo_saldo_val INT;
    
     -- Fetch client record
    SELECT limite, saldo INTO limite_val, saldo_val FROM clientes WHERE id = id_cliente_arg FOR UPDATE;
    
    SET novo_saldo_val = saldo_val + valor_transacao_arg;
    
    UPDATE clientes SET saldo = novo_saldo_val WHERE id = id_cliente_arg;
		
	  INSERT INTO transacoes (`valor`, `tipo`, `descricao`, `realizada_em`, `id_cliente`) 
		  VALUES (valor_transacao_arg, 'c', descricao_transacao_arg, realizada_em_arg, id_cliente_arg);
        
	  SET saldo_atualizado_return = novo_saldo_val;
    SET limite_return = limite_val;
END //
DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;